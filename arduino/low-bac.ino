/* 
  Sketch generated by the Arduino IoT Cloud Thing "BAC Start"
  https://create.arduino.cc/cloud/things/a805d7c4-af56-46d4-aebd-b3025f7c40a7 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float bloodAlcoholContent;
  bool doorLocks;
  String messages;
  bool startVehicle;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

// 15 pins per side on a Nano.
// Pin 19 (A0) is 4th down.
// Pin 29 is Ground.  [2nd from last]
// Pin 27 is +5 volts [4th from last]

// Pin 5 is (D2)  -- Request Unlock car
// Pin 4 is GND
// Pin 15 is D12  -- Request Start car

int ledPin = 13;

int sensorPin = A0;
int unlockPin = 2;
int startPin = 12;

float sensorValue = 0.0f;

void initData() {
  bloodAlcoholContent = 0.01f;
  messages = "Hello World!";
  doorLocks = true;
  startVehicle = false;
}

void setup() {
  pinMode(ledPin, OUTPUT);
  pinMode(unlockPin, INPUT_PULLUP);
  pinMode(startPin, INPUT_PULLUP);

  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  // Give some time for the cloud to get connected.
  delay(5000);
  initData();
}

int reentryBac = 0;
int reentryCmd = 0;

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  digitalWrite(ledPin, LOW);
  
  bool isUnlock = !digitalRead(unlockPin);
  bool isStart = !digitalRead(startPin);
  
  if (isUnlock || isStart) {
    for (int i=0; i<10; i++) {
      isUnlock &= !digitalRead(unlockPin);
      isStart = !digitalRead(startPin);
      delay(10);
    }
  }
  
  if (reentryBac > 0) {
    reentryBac--;
    if (reentryBac == 0) {
      Serial.println("\nBAC measurements are reenabled.\n");
    }
  }
  
  if (reentryCmd > 0) {
    reentryCmd--;
    if (reentryCmd == 0) {
      Serial.println("\nVehicle actions are reenabled.\n");
    }
  }
  
  if (isStart && isUnlock && reentryBac == 0) {
    reentryBac = 6;
    startVehicle = false;
    Serial.println("\nRequest to take a BAC reading.");
    digitalWrite(ledPin, HIGH);

    int sum = 0;
    for (int i=0; i < 20; i++) {
      int bacLevel = analogRead(sensorPin);
      sum += bacLevel;
      Serial.print("BAC LEVEL (0 to 1023) is ");
      delay(100);
      Serial.println(bacLevel);
    }
    
    digitalWrite(ledPin, LOW);
        
    float amt = sum/20.0;
    amt /= 4000.0;
    
    Serial.print("New BAC (uncalibrted is) ");
    Serial.println(amt);
    bloodAlcoholContent = amt;
    
    delay(1000);
    
  } else if (isStart && !isUnlock && reentryCmd == 0) {
    reentryCmd = 3;
    // Request to start the vehicle.
    Serial.println("\nRequest to start the vehicle");
    if (bloodAlcoholContent < 0.05) {
      Serial.println("Approved request to start vehicle.\n");
      startVehicle = true;
    } else {
      Serial.println("Denied request to start vehicle, wait a while and retry...\n");
    }
  } else if (isUnlock && !isStart && reentryCmd == 0) {
    reentryCmd = 3;
    // Request to unlock the vehicle.
    Serial.println("\nRequest to unlock the vehicle");
    if (bloodAlcoholContent < 0.05) {
      Serial.println("Approved request to unlock vehicle.\n");
      doorLocks = false;
    } else {
      Serial.println("Denied request to unlock vehicle, wait a while and retry...\n");
    }
  }
  
  delay(500);
}

void onBloodAlcoholContentChange() {
  // Do something
}


void onDoorLocksChange() {
  bloodAlcoholContent = 0.01f;

  // Do something
  if (doorLocks) {
    messages = "Doors are locked.";
  } else {
    messages = "Doors are now unlocked.";
  }
}


void onMessagesChange() {
  // Do something
}


void onStartVehicleChange() {
  // Do something
}
